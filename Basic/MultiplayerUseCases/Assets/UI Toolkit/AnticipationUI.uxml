<ui:UXML xmlns:ui="UnityEngine.UIElements" xmlns:uie="UnityEditor.UIElements" xsi="http://www.w3.org/2001/XMLSchema-instance" engine="UnityEngine.UIElements" editor="UnityEditor.UIElements" noNamespaceSchemaLocation="../../UIElementsSchema/UIElements.xsd" editor-extension-mode="False">
    <Style src="project://database/Assets/UI%20Toolkit/UseCasesStyleClass.uss?fileID=7433441132597879392&amp;guid=cac46a420be955345b18ac0d5d2d9e37&amp;type=3#UseCasesStyleClass" />
    <ui:VisualElement name="Background" class="anticipationUIBackground">
        <ui:Label text="Anticipated Network Variable:&#10;&#10;Each pair of sliders represents a network variable&apos;s authoritative and anticipate values. Changing the top slider sends an RPC to the server, which updates the bottom slider. The top slider shows the current &apos;anticipated&apos; value, including any smoothing, while the bottom represents the authoritative value.&#10;&#10;- W: Move Forward | S: Move Backward | A: Turn Left | D: Turn Right&#10;- Q: Large random teleport (very different server result)&#10;- E: Small random teleport (slightly different server result)&#10;- R: Return to center (same server result)" name="TitleLabel" class="labelText anticipationLabelText" />
        <ui:VisualElement class="anticipationSlidersContainer">
            <ui:Slider label="Variable smooth duration: XX,Xs" name="VariableSmoothDurationSlider" class="labelText anticipationSlider" />
            <ui:VisualElement name="ValueAContainer" class="anticipationSliderWithLabel">
                <ui:Slider label="Value A (snap, correct anticipation)" name="ValueASlider" class="labelText anticipationSlider" />
                <ui:Label text="Client value: &apos;X&apos; | Server value: &apos;X&apos;" name="ValueAValuesLabel" class="labelText anticipationLabelWithinContainer" />
            </ui:VisualElement>
            <ui:VisualElement name="ValueBContainer" class="anticipationSliderWithLabel">
                <ui:Slider label="Value B (snap, incorrect anticipation)" name="ValueBSlider" class="labelText anticipationSlider" />
                <ui:Label text="Client value: &apos;X&apos; | Server value: &apos;X&apos;" name="ValueBValuesLabel" class="labelText anticipationLabelWithinContainer" />
            </ui:VisualElement>
            <ui:VisualElement name="ValueCContainer" class="anticipationSliderWithLabel">
                <ui:Slider label="Value C (smooth, correct anticipation)" name="ValueCSlider" class="labelText anticipationSlider" />
                <ui:Label text="Client value: &apos;X&apos; | Server value: &apos;X&apos;" name="ValueCValuesLabel" class="labelText anticipationLabelWithinContainer" />
            </ui:VisualElement>
            <ui:VisualElement name="ValueDContainer" class="anticipationSliderWithLabel">
                <ui:Slider label="Value D (smooth, incorrect anticipation)" name="ValueDSlider" class="labelText anticipationSlider" />
                <ui:Label text="Client value: &apos;X&apos; | Server value: &apos;X&apos;" name="ValueDValuesLabel" class="labelText anticipationLabelWithinContainer" />
            </ui:VisualElement>
            <ui:VisualElement name="ValueEContainer" class="anticipationSliderWithLabel">
                <ui:Label text="Value E (Server-controlled, continuous anticipation): " name="ValueELabel" class="labelText anticipationLabelWithinContainerNoSlider" />
                <ui:Label text="Client value: &apos;X&apos; | Server value: &apos;X&apos;" name="ValueEValuesLabel" class="labelText anticipationLabelWithinContainer" />
            </ui:VisualElement>
        </ui:VisualElement>
        <ui:VisualElement class="anticipationControlsContainer">
            <ui:VisualElement name="TransformSmooth" class="anticipationControlsWithButtonContainer">
                <ui:Slider label="Transform smooth duration: XX,Xs" name="DurationSlider" class="labelText anticipationSliderInControlGroup" />
                <ui:Slider label="Transform smooth distance threshold: XX,X" name="DistanceThresholdSlider" class="labelText anticipationSliderInControlGroup" />
                <ui:Button text="Toggle Server visualization (Follower)" name="ToggleVisualizationButton" class="button UseCaseButton anticipationButton" />
            </ui:VisualElement>
            <ui:VisualElement name="LatencyAndJitter" class="anticipationControlsWithButtonContainer">
                <ui:SliderInt label="Latency: XXms" name="LatencySlider" class="labelText anticipationSliderInControlGroup" />
                <ui:SliderInt label="Jitter: XXms" name="JitterSlider" class="labelText anticipationSliderInControlGroup" />
                <ui:Button text="Apply" name="ApplyButton" class="button UseCaseButton anticipationButton" />
            </ui:VisualElement>
        </ui:VisualElement>
    </ui:VisualElement>
</ui:UXML>
